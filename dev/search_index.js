var documenterSearchIndex = {"docs":
[{"location":"#BangBang.jl-1","page":"Home","title":"BangBang.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [BangBang]","category":"page"},{"location":"#BangBang.append!!-Tuple{Any,Any}","page":"Home","title":"BangBang.append!!","text":"append!!(dest, src)\n\nAppend items in src to dest.  Mutate dest if possible.  See also push!!.\n\nExamples\n\njulia> using BangBang\n\njulia> append!!((1, 2), (3, 4))\n(1, 2, 3, 4)\n\njulia> append!!([1, 2], (3, 4))\n4-element Array{Int64,1}:\n 1\n 2\n 3\n 4\n\n\n\n\n\n","category":"method"},{"location":"#BangBang.push!!-Tuple{Any,Any,Any,Vararg{Any,N} where N}","page":"Home","title":"BangBang.push!!","text":"push!!(collection, items...)\n\nPush one or more items to collection.  Create a copy of collection if it cannot be mutated or the element type does not match.\n\nExamples\n\njulia> using BangBang\n\njulia> push!!((1, 2), 3)\n(1, 2, 3)\n\njulia> push!!([1, 2], 3)\n3-element Array{Int64,1}:\n 1\n 2\n 3\n\njulia> push!!([1, 2], 3.0)\n3-element Array{Float64,1}:\n 1.0\n 2.0\n 3.0\n\n\n\n\n\n","category":"method"},{"location":"#BangBang.setproperty!!-Tuple{Any,Any,Any}","page":"Home","title":"BangBang.setproperty!!","text":"setproperty!!(value, name, x)\n\nExamples\n\njulia> using BangBang\n\njulia> setproperty!!((a=1, b=2), :b, 3)\n(a = 1, b = 3)\n\njulia> struct Immutable\n           a\n           b\n       end\n\njulia> setproperty!!(Immutable(1, 2), :b, 3)\nImmutable(1, 3)\n\njulia> mutable struct Mutable\n           a\n           b\n       end\n\njulia> s = Mutable(1, 2);\n\njulia> setproperty!!(s, :b, 3)\nMutable(1, 3)\n\njulia> s\nMutable(1, 3)\n\n\n\n\n\n","category":"method"}]
}
